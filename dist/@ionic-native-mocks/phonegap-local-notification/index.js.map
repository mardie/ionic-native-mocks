{"version":3,"sources":["../../../src/@ionic-native-mocks/plugins/phonegap-local-notification/index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,yBAAyB,EAAE,SAAS,EAAE,MAAM,2CAA2C,CAAC;AAyBjG;IAAmD,iDAAyB;IAA5E;;IAoBA,CAAC;IAnBG;;;;;OAKG;IACH,8CAAM,GAAN,UAAO,KAAa,EAAE,OAAiC;QACnD,IAAI,QAAQ,GAAc,IAAI,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QACxD,MAAM,CAAC,QAAQ,CAAC;IACpB,CAAC;IAAA,CAAC;IACF;;;MAGE;IACF,yDAAiB,GAAjB;QACI,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACN,oCAAC;AAAD,CApBA,AAoBC,CApBkD,yBAAyB,GAoB3E","file":"index.js","sourceRoot":"","sourcesContent":["import { PhonegapLocalNotification, PLNObject } from '@ionic-native/phonegap-local-notification';\r\n\r\nexport interface LocalNotificationOptions {\r\n    /**\r\n     * Sets the direction of the notification. One of \"auto\", \"ltr\" or \"rtl\"\r\n     */\r\n    dir?: string;\r\n    /**\r\n     *  Sets the language of the notification\r\n     */\r\n    lang?: string;\r\n    /**\r\n     * Sets the body of the notification\r\n     */\r\n    body?: string;\r\n    /**\r\n     * Sets the identifying tag of the notification\r\n     */\r\n    tag?: string;\r\n    /**\r\n     * Sets the icon of the notification\r\n     */\r\n    icon?: string;\r\n}\r\n\r\nexport class PhonegapLocalNotificationMock extends PhonegapLocalNotification {\r\n    /**\r\n     * A global object that lets you interact with the Notification API.\r\n     * @param title {string} Title of the local notification.\r\n     * @param Options {LocalNotificationOptions} An object containing optional property/value pairs.\r\n     * @returns {PLNObject}\r\n     */\r\n    create(title: string, options: LocalNotificationOptions): PLNObject {\r\n        let response: PLNObject = new PLNObject(title, options);\r\n        return response;\r\n    };\r\n    /**\r\n    * requests permission from the user to show a local notification.\r\n    * @returns {Promise<any>}\r\n    */\r\n    requestPermission(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            resolve();\r\n        });\r\n    };\r\n}\r\n"]}