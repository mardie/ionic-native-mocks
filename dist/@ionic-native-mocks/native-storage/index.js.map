{"version":3,"sources":["../../../src/@ionic-native-mocks/plugins/native-storage/index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,8BAA8B,CAAC;AAE7D;IAAuC,qCAAa;IAApD;;IAkDA,CAAC;IAjDG;;;;;OAKG;IACH,mCAAO,GAAP,UAAQ,SAAiB,EAAE,KAAU;QACjC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACF;;;;OAIG;IACH,mCAAO,GAAP,UAAQ,SAAiB;QACrB,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACF;;;OAGG;IACH,gCAAI,GAAJ;QACI,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACF;;;;OAIG;IACH,kCAAM,GAAN,UAAO,SAAiB;QACpB,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACF;;;OAGG;IACH,iCAAK,GAAL;QACI,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACN,wBAAC;AAAD,CAlDA,AAkDC,CAlDsC,aAAa,GAkDnD","file":"index.js","sourceRoot":"","sourcesContent":["import { NativeStorage } from '@ionic-native/native-storage';\r\n\r\nexport class NativeStorageMock extends NativeStorage {\r\n    /**\r\n     * Stores a value\r\n     * @param reference {string}\r\n     * @param value\r\n     * @returns {Promise<any>}\r\n     */\r\n    setItem(reference: string, value: any): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Gets a stored item\r\n     * @param reference {string}\r\n     * @returns {Promise<any>}\r\n     */\r\n    getItem(reference: string): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Retrieving all keys\r\n     * @returns {Promise<any>}\r\n     */\r\n    keys(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Removes a single stored item\r\n     * @param reference {string}\r\n     * @returns {Promise<any>}\r\n     */\r\n    remove(reference: string): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Removes all stored values.\r\n     * @returns {Promise<any>}\r\n     */\r\n    clear(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            resolve();\r\n        });\r\n    };\r\n}\r\n"]}