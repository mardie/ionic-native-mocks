{"version":3,"sources":["../../../src/@ionic-native-mocks/plugins/three-dee-touch/index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,+BAA+B,CAAC;AAC9D,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AA4C7C;IAAuC,qCAAa;IAApD;;IAkDA,CAAC;IAjDG;;;OAGG;IACH,uCAAW,GAAX;QACI,IAAI,QAAQ,GAAY,IAAI,CAAC;QAC7B,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,CAAC,QAAQ,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACF;;;OAGG;IACH,6CAAiB,GAAjB;QACI,IAAI,QAAiC,CAAC;QACtC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,UAAC,QAAuB;YAC7C,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACxB,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACF;;;;;;;OAOG;IACH,iDAAqB,GAArB,UAAsB,YAA6C,IAAU,CAAC;IAAA,CAAC;IAC/E;;;OAGG;IACH,6CAAiB,GAAjB;QACI,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,UAAC,QAAuB;YAC7C,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAClB,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACF;;;OAGG;IACH,6CAAiB,GAAjB,cAA4B,CAAC;IAAA,CAAC;IAC9B;;OAEG;IACH,8CAAkB,GAAlB,cAA6B,CAAC;IAAA,CAAC;IACnC,wBAAC;AAAD,CAlDA,AAkDC,CAlDsC,aAAa,GAkDnD","file":"index.js","sourceRoot":"","sourcesContent":["import { ThreeDeeTouch } from '@ionic-native/three-dee-touch';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Observer } from 'rxjs/Observer';\r\n\r\nexport interface ThreeDeeTouchQuickAction {\r\n    /**\r\n     * Type that can be used in the onHomeIconPressed callback\r\n     */\r\n    type?: string;\r\n    /**\r\n     * Title\r\n     */\r\n    title: string;\r\n    /**\r\n     * Subtitle\r\n     */\r\n    subtitle?: string;\r\n    /**\r\n     * Icon type. Case insensitive\r\n     */\r\n    iconType?: string;\r\n    /**\r\n     * Icon template\r\n     */\r\n    iconTemplate?: string;\r\n}\r\nexport interface ThreeDeeTouchForceTouch {\r\n    /**\r\n     * Touch force\r\n     */\r\n    force: number;\r\n    /**\r\n     * Timestamp of action\r\n     */\r\n    timestamp: number;\r\n    /**\r\n     * X coordinate of action\r\n     */\r\n    x: number;\r\n    /**\r\n     * Y coordinate of action\r\n     */\r\n    y: number;\r\n}\r\n\r\nexport class ThreeDeeTouchMock extends ThreeDeeTouch {\r\n    /**\r\n     * You need an iPhone 6S or some future tech to use the features of this plugin, so you can check at runtime if the user's device is supported.\r\n     * @returns {Promise<boolean>} returns a promise that resolves with a boolean that indicates whether the plugin is available or not\r\n     */\r\n    isAvailable(): Promise<boolean> {\r\n        let response: boolean = true;\r\n        return new Promise((resolve, reject) => {\r\n            resolve(response);\r\n        });\r\n    };\r\n    /**\r\n     * You can get a notification when the user force touches the webview. The plugin defines a Force Touch when at least 75% of the maximum force is applied to the screen. Your app will receive the x and y coordinates, so you have to figure out which UI element was touched.\r\n     * @returns {Observable<ThreeDeeTouchForceTouch>} Returns an observable that sends a `ThreeDeeTouchForceTouch` object\r\n     */\r\n    watchForceTouches(): Observable<ThreeDeeTouchForceTouch> {\r\n        let response: ThreeDeeTouchForceTouch;\r\n        return Observable.create((observer: Observer<any>) => {\r\n            observer.next(response);\r\n            observer.complete();\r\n        });\r\n    };\r\n    /**\r\n     * setup the 3D-touch actions, takes an array of objects with the following\r\n     * @param {string} type (optional) A type that can be used `onHomeIconPressed` callback\r\n     * @param {string} title Title for your action\r\n     * @param {string} subtitle (optional) A short description for your action\r\n     * @param {string} iconType (optional) Choose between Prohibit, Contact, Home, MarkLocation, Favorite, Love, Cloud, Invitation, Confirmation, Mail, Message, Date, Time, CapturePhoto, CaptureVideo, Task, TaskCompleted, Alarm, Bookmark, Shuffle, Audio, Update\r\n     * @param {string} iconTemplate (optional) Can be used to provide your own icon\r\n     */\r\n    configureQuickActions(quickActions: Array<ThreeDeeTouchQuickAction>): void { };\r\n    /**\r\n     * When a home icon is pressed, your app launches and this JS callback is invoked.\r\n     * @returns {Observable<any>} returns an observable that notifies you when he user presses on the home screen icon\r\n     */\r\n    onHomeIconPressed(): Observable<any> {\r\n        return Observable.create((observer: Observer<any>) => {\r\n            observer.next('');\r\n            observer.complete();\r\n        });\r\n    };\r\n    /**\r\n     * Enable Link Preview.\r\n     * UIWebView and WKWebView (the webviews powering Cordova apps) don't allow the fancy new link preview feature of iOS9.\r\n     */\r\n    enableLinkPreview(): void { };\r\n    /**\r\n     * Disabled the link preview feature, if enabled.\r\n     */\r\n    disableLinkPreview(): void { };\r\n}\r\n"]}