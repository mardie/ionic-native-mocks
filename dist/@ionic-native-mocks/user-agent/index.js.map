{"version":3,"sources":["../../../src/@ionic-native-mocks/plugins/user-agent/index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AAErD;IAAmC,iCAAS;IAA5C;;IA6BA,CAAC;IA5BG;;;;OAIG;IACH,2BAAG,GAAH,UAAI,SAAiB;QACjB,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACF;;;OAGG;IACH,2BAAG,GAAH;QACI,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACF;;;OAGG;IACH,6BAAK,GAAL;QACI,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACN,oBAAC;AAAD,CA7BA,AA6BC,CA7BkC,SAAS,GA6B3C","file":"index.js","sourceRoot":"","sourcesContent":["import { UserAgent } from '@ionic-native/user-agent';\r\n\r\nexport class UserAgentMock extends UserAgent {\r\n    /**\r\n     * Changes the current user-agent to the one sent by argument.\r\n     * @param userAgent {string} User-Agent\r\n     * @return {Promise<any>} Returns a promise that resolves when the user-agent changes\r\n     */\r\n    set(userAgent: string): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Returns the current user-agent string.\r\n     * @return {Promise<any>} Returns a promise that resolves when the user-agent is returned\r\n     */\r\n    get(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Sets the user-agent back to default\r\n     * @return {Promise<any>} Returns a promise that resolves when the user-agent resets\r\n     */\r\n    reset(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            resolve();\r\n        });\r\n    };\r\n}\r\n"]}