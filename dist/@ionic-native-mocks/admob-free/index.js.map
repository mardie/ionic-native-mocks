{"version":3,"sources":["../../../src/@ionic-native-mocks/plugins/admob-free/index.ts"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"","sourcesContent":["import { AdMobFree } from '@ionic-native/admob-free';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Observer } from 'rxjs/Observer';\r\nimport 'rxjs/add/observable/fromEvent';\r\n\r\nexport interface AdMobFreeBannerConfig {\r\n    /**\r\n     * Ad Unit ID\r\n     */\r\n    id?: string;\r\n    /**\r\n     * Receiving test ad\r\n     */\r\n    isTesting?: boolean;\r\n    /**\r\n     * Auto show ad when loaded\r\n     */\r\n    autoShow?: boolean;\r\n    /**\r\n     * Set to true, to put banner at top\r\n     */\r\n    bannerAtTop?: boolean;\r\n    /**\r\n     * Set to true, to allow banner overlap WebView\r\n     */\r\n    overlap?: boolean;\r\n    /**\r\n     * Set to true to avoid ios7 status bar overlap\r\n     */\r\n    offsetTopBar?: boolean;\r\n    /**\r\n     * Banner  size\r\n     */\r\n    size?: string;\r\n}\r\nexport interface AdMobFreeInterstitialConfig {\r\n    /**\r\n     * Ad Unit ID\r\n     */\r\n    id?: string;\r\n    /**\r\n     * Receiving test ad\r\n     */\r\n    isTesting?: boolean;\r\n    /**\r\n     * Auto show ad when loaded\r\n     */\r\n    autoShow?: boolean;\r\n}\r\nexport interface AdMobFreeRewardVideoConfig {\r\n    /**\r\n     * Ad Unit ID\r\n     */\r\n    id?: string;\r\n    /**\r\n     * Receiving test ad\r\n     */\r\n    isTesting?: boolean;\r\n    /**\r\n     * Auto show ad when loaded\r\n     */\r\n    autoShow?: boolean;\r\n}\r\n\r\nexport class AdMobFreeMock extends AdMobFree {\r\n    /**\r\n     * Convenience object to get event names\r\n     * @type {Object}\r\n     */\r\n    events: any;\r\n    /**\r\n     * Watch an event\r\n     * @param event {string} event name\r\n     * @return {Observable<any>}\r\n     */\r\n    on(event: string): Observable<any> {\r\n        return Observable.create((observer: Observer<any>) => {\r\n            observer.next('');\r\n            observer.complete();\r\n        });\r\n    };\r\n    /**\r\n     * Returns the AdMobFreeBanner object\r\n     * @type {AdMobFreeBanner}\r\n     */\r\n    banner: AdMobFreeBanner;\r\n    /**\r\n     * Returns the AdMobFreeInterstitial object\r\n     * @type {AdMobFreeInterstitial}\r\n     */\r\n    interstitial: AdMobFreeInterstitial;\r\n    /**\r\n     * Returns the AdMobFreeRewardVideo object\r\n     * @type {AdMobFreeRewardVideo}\r\n     */\r\n    rewardVideo: AdMobFreeRewardVideo;\r\n}\r\n/**\r\n * @hidden\r\n */\r\nexport class AdMobFreeBanner {\r\n    /**\r\n     * Update config.\r\n     * @param options\r\n     * @return {AdMobFreeBannerConfig}\r\n     */\r\n    config(options: AdMobFreeBannerConfig): AdMobFreeBannerConfig {\r\n        let config: AdMobFreeBannerConfig;\r\n        return config;\r\n    };\r\n    /**\r\n     * Hide the banner.\r\n     * @return {Promise<any>}\r\n     */\r\n    hide(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Create banner.\r\n     * @return {Promise<any>}\r\n     */\r\n    prepare(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Remove the banner.\r\n     * @return {Promise<any>}\r\n     */\r\n    remove(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Show the banner.\r\n     * @return {Promise<any>}\r\n     */\r\n    show(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            resolve();\r\n        });\r\n    };\r\n}\r\n/**\r\n * @hidden\r\n */\r\nexport class AdMobFreeInterstitial {\r\n    /**\r\n     * Update config.\r\n     * @param options\r\n     * @return {AdMobFreeInterstitialConfig}\r\n     */\r\n    config(options: AdMobFreeInterstitialConfig): AdMobFreeInterstitialConfig {\r\n        let config: AdMobFreeInterstitialConfig;\r\n        return config;\r\n    };\r\n    /**\r\n     * Check if interstitial is ready\r\n     * @return {Promise<any>}\r\n     */\r\n    isReady(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Prepare interstitial\r\n     * @return {Promise<any>}\r\n     */\r\n    prepare(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Show the interstitial\r\n     * @return {Promise<any>}\r\n     */\r\n    show(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            resolve();\r\n        });\r\n    };\r\n}\r\n/**\r\n * @hidden\r\n */\r\nexport class AdMobFreeRewardVideo {\r\n    /**\r\n     * Update config.\r\n     * @param options\r\n     * @return {AdMobFreeRewardVideoConfig}\r\n     */\r\n    config(options: AdMobFreeRewardVideoConfig): AdMobFreeRewardVideoConfig {\r\n        let config: AdMobFreeRewardVideoConfig;\r\n        return config;\r\n    };\r\n    /**\r\n     * Check if reward video is ready\r\n     * @return {Promise<any>}\r\n     */\r\n    isReady(): Promise<any> {\r\n         return new Promise((resolve, reject) => {\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Prepare reward video\r\n     * @return {Promise<any>}\r\n     */\r\n    prepare(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Show the reward video\r\n     * @return {Promise<any>}\r\n     */\r\n    show(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            resolve();\r\n        });\r\n    };\r\n}\r\n"]}