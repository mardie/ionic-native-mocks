{"version":3,"sources":["../../../src/@ionic-native-mocks/plugins/screen-orientation/index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,kCAAkC,CAAC;AACrE,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAG7C;IAA2C,yCAAiB;IAA5D;;IAyCA,CAAC;IA5BG;;;OAGG;IACH,wCAAQ,GAAR;QACI,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,UAAC,QAAuB;YAC7C,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACF;;;;;OAKG;IACH,oCAAI,GAAJ,UAAK,WAAmB;QACpB,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACF;;OAEG;IACH,sCAAM,GAAN,cAAiB,CAAC;IAAA,CAAC;IAKvB,4BAAC;AAAD,CAzCA,AAyCC,CAzC0C,iBAAiB,GAyC3D","file":"index.js","sourceRoot":"","sourcesContent":["import { ScreenOrientation } from '@ionic-native/screen-orientation';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Observer } from 'rxjs/Observer';\r\n\r\nexport class ScreenOrientationMock extends ScreenOrientation {\r\n    /**\r\n     * Convenience enum for possible orientations\r\n     */\r\n    ORIENTATIONS: {\r\n        PORTRAIT_PRIMARY: string;\r\n        PORTRAIT_SECONDARY: string;\r\n        LANDSCAPE_PRIMARY: string;\r\n        LANDSCAPE_SECONDARY: string;\r\n        PORTRAIT: string;\r\n        LANDSCAPE: string;\r\n        ANY: string;\r\n    };\r\n    /**\r\n     * Listen to orientation change event\r\n     * @return {Observable<void>}\r\n     */\r\n    onChange(): Observable<void> {\r\n        return Observable.create((observer: Observer<any>) => {\r\n            observer.complete();\r\n        });\r\n    };\r\n    /**\r\n     * Lock the orientation to the passed value.\r\n     * See below for accepted values\r\n     * @param orientation {string} The orientation which should be locked. Accepted values see table above.\r\n     * @return {Promise<any>}\r\n     */\r\n    lock(orientation: string): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Unlock and allow all orientations.\r\n     */\r\n    unlock(): void { };\r\n    /**\r\n     * Get the current orientation of the device.\r\n     */\r\n    type: string;\r\n}\r\n"]}