{"version":3,"sources":["../../../src/@ionic-native-mocks/plugins/flashlight/index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,0BAA0B,CAAC;AAEtD;IAAqC,mCAAU;IAA/C;;IA4CA,CAAC;IA3CG;;;OAGG;IACH,mCAAS,GAAT;QACI,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,CAAC,IAAI,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACF;;;OAGG;IACH,kCAAQ,GAAR;QACI,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,CAAC,IAAI,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACF;;;OAGG;IACH,mCAAS,GAAT;QACI,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,CAAC,IAAI,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACF;;;OAGG;IACH,gCAAM,GAAN;QACI,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACF;;;OAGG;IACH,sCAAY,GAAZ;QACI,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAAA,CAAC;IACN,sBAAC;AAAD,CA5CA,AA4CC,CA5CoC,UAAU,GA4C9C","file":"index.js","sourceRoot":"","sourcesContent":["import { Flashlight } from '@ionic-native/flashlight';\r\n\r\nexport class FlashlightMocks extends Flashlight {\r\n    /**\r\n     * Checks if the flashlight is available\r\n     * @returns {Promise<boolean>} Returns a promise that resolves with a boolean stating if the flashlight is available.\r\n     */\r\n    available(): Promise<boolean> {\r\n        return new Promise((resolve, reject) => {\r\n            resolve(true);\r\n        });\r\n    };\r\n    /**\r\n     * Switches the flashlight on\r\n     * @returns {Promise<boolean>}\r\n     */\r\n    switchOn(): Promise<boolean> {\r\n        return new Promise((resolve, reject) => {\r\n            resolve(true);\r\n        });\r\n    };\r\n    /**\r\n     * Switches the flashlight off\r\n     * @returns {Promise<boolean>}\r\n     */\r\n    switchOff(): Promise<boolean> {\r\n        return new Promise((resolve, reject) => {\r\n            resolve(true);\r\n        });\r\n    };\r\n    /**\r\n     * Toggles the flashlight\r\n     * @returns {Promise<any>}\r\n     */\r\n    toggle(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Checks if the flashlight is turned on.\r\n     * @returns {boolean}\r\n     */\r\n    isSwitchedOn(): boolean {\r\n        return true;\r\n    };\r\n}\r\n"]}