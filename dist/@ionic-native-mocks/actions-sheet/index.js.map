{"version":3,"sources":["../../../src/@ionic-native-mocks/plugins/actions-sheet/index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,4BAA4B,CAAC;AA6CzD;IAAqC,mCAAW;IAAhD;;IA4BA,CAAC;IApBG;;;;;OAKG;IACH,8BAAI,GAAJ,UAAK,OAA4B;QAC7B,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACF;;;OAGG;IACH,8BAAI,GAAJ,UAAK,OAAa;QACd,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IACL,sBAAC;AAAD,CA5BA,AA4BC,CA5BoC,WAAW,GA4B/C","file":"index.js","sourceRoot":"","sourcesContent":["import { ActionSheet } from '@ionic-native/action-sheet';\r\n\r\nexport interface ActionSheetOptions {\r\n    /**\r\n     * The labels for the buttons. Uses the index x\r\n     */\r\n    buttonLabels: string[];\r\n    /**\r\n     * The title for the actionsheet\r\n     */\r\n    title?: string;\r\n    /**\r\n     * The subtitle for the actionsheet (IOS only)\r\n     */\r\n    subtitle?: string;\r\n    /**\r\n     * Theme to be used on Android\r\n     */\r\n    androidTheme?: number;\r\n    /**\r\n     * Enable a cancel on Android\r\n     */\r\n    androidEnableCancelButton?: boolean;\r\n    /**\r\n     * Enable a cancel on Windows Phone\r\n     */\r\n    winphoneEnableCancelButton?: boolean;\r\n    /**\r\n     * Add a cancel button with text\r\n     */\r\n    addCancelButtonWithLabel?: string;\r\n    /**\r\n     * Add a destructive button with text\r\n     */\r\n    addDestructiveButtonWithLabel?: string;\r\n    /**\r\n     * On an iPad, set the X,Y position\r\n     */\r\n    position?: number[];\r\n    /**\r\n     * Choose if destructive button will be the last\r\n     */\r\n    destructiveButtonLast?: boolean;\r\n}\r\n\r\nexport class ActionSheetMock extends ActionSheet {\r\n    ANDROID_THEMES: {\r\n        THEME_TRADITIONAL: number;\r\n        THEME_HOLO_DARK: number;\r\n        THEME_HOLO_LIGHT: number;\r\n        THEME_DEVICE_DEFAULT_DARK: number;\r\n        THEME_DEVICE_DEFAULT_LIGHT: number;\r\n    };\r\n    /**\r\n     * Show a native ActionSheet component. See below for options.\r\n     * @param options {ActionSheetOptions} Options See table below\r\n     * @returns {Promise<any>} Returns a Promise that resolves with the index of the\r\n     *   button pressed (1 based, so 1, 2, 3, etc.)\r\n     */\r\n    show(options?: ActionSheetOptions): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Progamtically hide the native ActionSheet\r\n     * @returns {Promise<any>} Returns a Promise that resolves when the actionsheet is closed\r\n     */\r\n    hide(options?: any): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            resolve();\r\n        });\r\n    }\r\n}\r\n"]}