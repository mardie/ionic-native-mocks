{"version":3,"sources":["../../../src/@ionic-native-mocks/plugins/browser-tab/index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,2BAA2B,CAAC;AAEvD;IAAoC,kCAAU;IAA9C;;IA6BA,CAAC;IA5BG;;;OAGG;IACH,oCAAW,GAAX;QACI,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACF;;;;OAIG;IACH,gCAAO,GAAP,UAAQ,GAAW;QACf,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACF;;;OAGG;IACH,8BAAK,GAAL;QACI,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACN,qBAAC;AAAD,CA7BA,AA6BC,CA7BmC,UAAU,GA6B7C","file":"index.js","sourceRoot":"","sourcesContent":["import { BrowserTab } from '@ionic-native/browser-tab';\r\n\r\nexport class BrowserTabMock extends BrowserTab {\r\n    /**\r\n     * Check if BrowserTab option is available\r\n     * @return {Promise<any>} Returns a promise that resolves when check is successful and returns true or false\r\n     */\r\n    isAvailable(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Opens the provided URL using a browser tab\r\n     * @param {string} url  The URL you want to open\r\n     * @return {Promise<any>} Returns a promise that resolves when check open was successful\r\n     */\r\n    openUrl(url: string): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Closes browser tab\r\n     * @return {Promise<any>} Returns a promise that resolves when close was finished\r\n     */\r\n    close(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            resolve();\r\n        });\r\n    };\r\n}\r\n"]}